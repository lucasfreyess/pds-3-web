<%= form_with model: @model, url: models_path, local: true, html: { multipart: true } do |f| %>
  <div>
    <%= f.label :name, "Nombre del Modelo" %>
    <%= f.text_field :name, class: "form-control", required: true %>
  </div>
  
  <div>
    <%= f.label :description, "Descripción del Modelo" %>
    <%= f.text_area :description, class: "form-control", required: true %>
  </div>

  <div>
    <%= f.label :url, "URL del Modelo" %>
    <%= f.text_field :url, class: "form-control", required: true %>
  </div>
  
  <div>
    <%= f.label :version, "Versión del Modelo" %>
    <%= f.text_field :version, class: "form-control", required: true %>
  </div>

  <hr />

  <div id="gestures">
    <%= f.fields_for :gestures do |gesture| %>
      <div class="gesture-fields">
        <div>
          <%= gesture.label :name, "Nombre del Gesto" %>
          <%= gesture.text_field :name, class: "form-control", required: true %>
        </div>
        <div>
          <%= gesture.label :description, "Descripción del Gesto" %>
          <%= gesture.text_area :description, class: "form-control" %>
        </div>
        <div>
          <%= gesture.label :image, "Imagen del Gesto" %>
          <%= gesture.file_field :image, accept: 'image/*', class: "form-control" %>
        </div>

        <button class="btn btn-danger remove-gesture" type="button">
          Eliminar
        </button>
      </div>
    <% end %>
  </div>
  
  <button id="add-gesture" class="btn btn-primary" type="button">
    Agregar Gesto
  </button>
  
  <div class="mt-3">
    <%= f.submit "Crear Modelo", class: "btn btn-success" %>
  </div>
<% end %>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const gesturesContainer = document.getElementById("gestures");
    const addGestureButton = document.getElementById("add-gesture");

    if (gesturesContainer && addGestureButton) {
      let gestureIndex = gesturesContainer.children.length;

      addGestureButton.addEventListener("click", (event) => {
        event.preventDefault();

        const newGesture = document.createElement("div");
        newGesture.classList.add("gesture-fields");

        newGesture.innerHTML = gesturesContainer.children[0].innerHTML.replace(
          /\[\d+\]/g,
          `[${gestureIndex}]`
        );

        const inputs = newGesture.querySelectorAll("input, textarea");
        inputs.forEach((input) => (input.value = ""));

        gesturesContainer.appendChild(newGesture);
        gestureIndex++;
      });

      gesturesContainer.addEventListener("click", (event) => {
        if (event.target.classList.contains("remove-gesture")) {
          event.preventDefault();
          if (gesturesContainer.children.length > 6) {
            event.target.closest(".gesture-fields").remove();
          } else {
            alert("Debe haber al menos 6 gestos.");
          }
        }
      });
    }
  });
</script>
